{"version":3,"sources":["components/AddName.js","components/Filter.js","components/Numbers.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["AddName","handleNewName","addPerson","newName","newNum","handleNewNum","onSubmit","value","onChange","type","Filter","filter","handleFilter","Numbers","persons","handleDelete","map","person","name","number","onClick","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","updatedPerson","put","Notification","message","style","App","useState","setPersons","setNewName","setNewNum","setFilter","filters","setFilters","isFiltering","setIsFiltering","setMessage","setStyle","errorStyle","color","background","fontSize","borderStyle","padding","marginBottom","borderRadius","messageStyle","useEffect","console","log","personService","reg","RegExp","filtered","match","window","confirm","per","event","target","preventDefault","length","setTimeout","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.153a4344.chunk.js","sourcesContent":["const AddName = ({handleNewName, addPerson, newName, newNum, handleNewNum}) => {\r\n\treturn ( \r\n\t\t<form onSubmit={addPerson}>\r\n\t\t\t<div>\r\n\t\t\t\tname: <input\r\n\t\t\t\t\tvalue={newName}\r\n\t\t\t\t\tonChange={handleNewName}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber: <input\r\n\t\t\t\t\t\t\tvalue={newNum}\r\n\t\t\t\t\t\t\tonChange={handleNewNum}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t );\r\n}\r\n \r\nexport default AddName;","const Filter = ({filter, handleFilter}) => {\r\n\treturn ( \r\n\t\t<form>\r\n\t\t\t<div>\r\n\t\t\t\tfilter: <input\r\n\t\t\t\t\t\t\tvalue={filter}\r\n\t\t\t\t\t\t\tonChange={handleFilter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t );\r\n}\r\n \r\nexport default Filter;","const Numbers = ({persons, handleDelete}) => {\r\n\treturn ( \r\n\t\t<div>\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t{persons.map((person) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={person.name}>\r\n\t\t\t\t\t\t{person.name} {person.number} <button onClick={() => handleDelete(person)}>Delete</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\r\n\t );\r\n}\r\n \r\nexport default Numbers;","import axios from 'axios'\r\n/*\r\nboth the frontend and the backend are at the same address, we can declare baseUrl as a relative URL. This means we can leave out the part declaring the server.\r\n*/\r\nconst baseUrl = 'api/persons';\r\n\r\nconst getPersons = () => {\r\n\t// this returns a promise that when resolved gives persons\r\n\treturn axios\r\n\t\t.get(baseUrl)\r\n\t\t.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n\treturn axios\r\n\t\t.post(baseUrl, newPerson)\r\n\t\t.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n\treturn axios\r\n\t\t.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n\treturn axios\r\n\t\t.put(`${baseUrl}/${id}`, updatedPerson)\r\n\t\t.then(response => response.data)\r\n}\r\n\r\nexport default {getPersons, create, remove, update};","const Notification = ({message, style}) => {\r\n\tif (message === null) { \r\n\t\treturn null;\r\n\t}\r\n\treturn (\r\n\t\t<div style={style}>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t);\r\n}\r\n \r\nexport default Notification;","import React, { useEffect, useState } from 'react'\nimport AddName from './components/AddName'\nimport Filter from './components/Filter';\nimport Numbers from './components/Numbers'\n// import axios from 'axios'\nimport personService from './services/persons'\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNum, setNewNum] = useState('');\n  const [filter, setFilter] = useState('');\n  const [filters, setFilters] = useState([]);\n  const [isFiltering, setIsFiltering] = useState(false);\n  const [message, setMessage] = useState(null)\n  const [style, setStyle] = useState({});\n\n  const errorStyle = {\n    color: \"red\",\n    background: \"lightgray\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 5\n  };\n\n  const messageStyle = {\n    color: \"green\",\n    background: \"lightgray\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 5\n  };\n\n  useEffect(() => {\n    console.log(\"effect\");\n    // axios.get return a promise, once that promise is resolved we use the then \n    // methon to perform an action on the result.\n    // axios\n    //   .get(\"http://localhost:3001/persons\")\n    //   .then(response => {\n    //     console.log(response)\n    //     setPersons(response.data)\n    //   });\n    // getPersons returns a promise with the array of person as resolved value\n    personService\n      .getPersons()\n      .then(response => setPersons(response))\n  }, []);\n\n  useEffect(() => {\n    if (filter === \"\") {\n      setIsFiltering(false);\n    } else {\n      // we make filter a regex, so we can use the match method, i means ignore case\n      let reg = new RegExp(filter, 'i');\n      // loop through persons array and store all persons whose name match in filtered\n      let filtered = persons.filter((person) => person.name.match(reg));\n      // set filters to filtered which is an array of persons whose match search\n      setFilters(filtered);\n      setIsFiltering(true);\n    }\n  }, [persons, filter])\n\n\n  const handleNewName = (event) => {\n    // the target is the input field, and value is newName\n    setNewName(event.target.value);\n  }\n\n  const handleNewNum = (event) => {\n    setNewNum(event.target.value);\n  }\n\n  const addPerson = (event) => {\n    // the default action of submitting a form is to reload the screen\n    event.preventDefault();\n    setStyle(messageStyle);\n    // issues a warning if we add the same name again\n    if (persons.filter((person) => person.name === newName).length > 0) {\n      // this is a template string\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        const person = persons.filter(per => per.name === newName)[0]\n        const newPerson = { ...person, number: newNum }\n        personService\n          .update(newPerson.id, newPerson)\n          .then(response => {\n            // response here is a person object\n            // change the state of the person so that the updated num is visible\n            setPersons(persons.map(per => per.id === response.id ? response : per));\n            // message that displays that we have added a new person\n            setMessage(`Added ${newName}`)\n            // after 5 seconds setMessage to null\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000)\n            setNewName('');\n            setNewNum('');\n            console.log(response);\n          })\n          .catch(error => {\n            console.log(error)\n            setStyle(errorStyle);\n            setMessage(`The information of ${newName} has been deleted from the server`)\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000)\n          })\n      }\n      return;\n    }\n    // we add people to the json server db with post\n    // the json server will make the id for us\n    const newPerson = {\n      name: newName,\n      number: newNum\n    }\n    // axios\n    //   .post('http://localhost:3001/persons', newPerson)\n    //   .then(response => {\n    //     console.log(response);\n    //     setPersons(persons.concat(response.data));\n    //     setNewName('');\n    //     setNewNum('');\n    //   })\n\n    // create posts to the server and returns the data that was posted\n    personService\n      .create(newPerson)\n      .then(response => {\n        setPersons(persons.concat(response));\n        // message that displays that we have added a new person\n        setMessage(`Added ${newName}`)\n        // after 5 seconds setMessage to null\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000)\n        console.log(response);\n        setNewName('');\n        setNewNum('');\n      })\n      .catch(error => {\n        setStyle(errorStyle);\n        setMessage(error.response.data);\n        // this is how you access express error\n        console.log(error.response.data);\n        setTimeout(() => setMessage(null), 5000);\n      })\n\n  }\n\n  const handleFilter = (event) => {\n    // set what we type as the filter\n    /*\n      We add the rest of the filtering logic in useEffect because setFilter is async\n      and the state will be one step behind the actual value value in the filter\n      When we put it in useEffect the logic will only apply when the state changes\n    */\n    setFilter(event.target.value);\n  }\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Are you sure you want to delete ${person.name}`)) {\n      personService\n        .remove(person.id)\n        .then(response => {\n          setPersons(persons.filter(per => per.id !== person.id))\n          // remove the deleted person from the persons state\n          console.log('deleted', person.name)\n        });\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} style={style}></Notification>\n      <Filter\n        filter={filter}\n        handleFilter={handleFilter}\n      ></Filter>\n      <h2>Add new person</h2>\n      <AddName\n        handleNewName={handleNewName}\n        addPerson={addPerson}\n        newName={newName}\n        newNum={newNum}\n        handleNewNum={handleNewNum}\n      ></AddName>\n      {/* if there are no people in filters array ie no matches  */}\n      {!isFiltering > 0 && <Numbers persons={persons} handleDelete={handleDelete}></Numbers>}\n      {isFiltering > 0 && <Numbers persons={filters} handleDelete={handleDelete}></Numbers>}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}